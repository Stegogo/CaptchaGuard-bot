import asyncio
import random
from aiogram import types
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from asyncpg import Connection, Record
import commhandlers
import gettext

from data import config
from loader import bot, dp, db, _

lang = None
greet = None
protect = True
non_admin_text = _("–¢—ã –Ω–µ –∞–¥–º–∏–Ω –∏ –Ω–µ –º–æ–∂–µ—à—å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –º–µ–Ω—è!")

class TechSupport(StatesGroup):
    send_msg = State()
    chat_id = 0
class SupportReply(StatesGroup):
    send_msg = State()
class ReplyTo:
    msg_id = 0
    chat_id = 0

@dp.message_handler(commands="menu")
async def send_menu(message: types.Message):
    text = _(f"""
–ü—Ä–∏–≤–µ—Ç! üëã –Ø - CaptchaGuard, –∑–∞—â–∏—â–∞—é –≤–∞—à —á–∞—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π-–±–æ—Ç–æ–≤.\n
–í—ã –≤—ã–∑–≤–∞–ª–∏ –º–æ—ë –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.
–ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–º –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞.\n
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/set_language: –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ üåç
/set_greeting: –°–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ‚≠êÔ∏è
/disable_captcha: –û—Ç–∫–ª—é—á–∏—Ç—å –∫–∞–ø—á—É üîì
/enable_captcha: –í–∫–ª—é—á–∏—Ç—å –∫–∞–ø—á—É üîí
/contact: –ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚öô""")
    await message.answer(text=text)

@dp.message_handler(commands="about")
async def send_about(message: types.Message):
    text = _(f"""
–ü—Ä–∏–≤–µ—Ç! üëã –Ø - CaptchaGuard!
–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—â–∏—â–∞–µ—Ç –∫–∞–ø—á–µ–π –ø—É–±–ª–∏—á–Ω—ã–µ —á–∞—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π-–±–æ—Ç–æ–≤.\n
–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
–ö–æ–≥–¥–∞ –∫ —á–∞—Ç—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫, —è –¥–∞—é –µ–º—É –ø—Ä–æ—Å—Ç—É—é –∑–∞–¥–∞—á—É, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –±–æ—Ç –æ–Ω –∏–ª–∏ —á–µ–ª–æ–≤–µ–∫.
–¢–æ—Ç –∫—Ç–æ –Ω–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –∑–∞–¥–∞—á–µ–π, –∏—Å–∫–ª—é—á–∞–µ—Ç—Å—è –∏–∑ —á–∞—Ç–∞!\n
CaptchaGuard - <a href="https://github.com/Stegogo/CaptchaGuard-bot">–±–æ—Ç —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∫–æ–¥–æ–º</a>!
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–¥–µ—Ä–∂–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—É ‚ù§Ô∏è5168755455346094 (MasterCard)\n
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/menu: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚úèÔ∏è
/contact: –ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚öôÔ∏è
/set_language: –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ üåç
""")
    await message.answer(text=text, disable_web_page_preview=True)

@dp.message_handler(commands="contact")
async def send_contact(message: types.Message):
    if message.chat.id != message.from_user.id:
        text = _(f"""
–ß—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É, –ø–µ—Ä–µ–π–¥–∏ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º:\n
‚öôÔ∏èhttps://t.me/captchaguardbot?start=techsupportüîß\n
–í –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É contact!
–°–ø–∞—Å–∏–±–æ –∑–∞—Ä–∞–Ω–µ–µ! –¢—ã –ø–æ–ª—É—á–∏—à—å –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
""")
        await message.answer(text=text)
    else:
        await send_support(message)

@dp.message_handler(commands="techsupport", state="*")
async def send_support(message: types.Message):
    text = _(f"""
–¢–æ, —á—Ç–æ —Ç—ã —Å–µ–π—á–∞—Å –Ω–∞–ø–∏—à–µ—à—å, –±—É–¥–µ—Ç –ø–µ—Ä–µ—Å–ª–∞–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!
–ü–æ—Å—Ç–∞—Ä–∞–π—Å—è —É–º–µ—Å—Ç–∏—Ç—å —Ç–æ, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–∫–∞–∑–∞—Ç—å, –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ ‚ù§Ô∏è\n
–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É - –Ω–∞–∂–º–∏ /cancel
""")
    await message.answer(text=text)
    await TechSupport.send_msg.set()

@dp.message_handler(commands="cancel", state=TechSupport.send_msg)
async def forward_cancel(message: types.Message, state: FSMContext):
    await message.answer("‚úÖ")
    await state.finish()

@dp.message_handler(state=TechSupport.send_msg, content_types=types.ContentTypes.TEXT)
async def forward_to_support(message: types.Message, state: FSMContext):
    msg = message.message_id
    await dp.bot.forward_message(int(config.ADMINS), message.chat.id, msg)
    await message.answer(_("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –°–ø–∞—Å–∏–±–æ!"))
    await state.finish()

@dp.message_handler(commands="reply", state="*")
async def reply_to_user(message: types.Message):
    if message.chat.id == int(config.ADMINS):
        await message.answer("–ú–æ–∂–µ—à—å –æ—Ç–≤–µ—á–∞—Ç—å!")
        await SupportReply.send_msg.set()
    else:
        pass
@dp.message_handler(state=SupportReply.send_msg, content_types=types.ContentTypes.TEXT)
async def end_step(message: types.Message, state: FSMContext):
    msg = message.text
    await bot.send_message(message.reply_to_message.forward_from.id, msg)
    await message.answer("–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    await state.finish()

@dp.message_handler(commands="set_greeting")
async def set_greet_1(message: types.Message):
    tmp = await bot.get_chat_administrators(message.chat.id)
    admins = [x.user.id for x in tmp]
    if message.from_user.id in admins:
        text = _(f"""
–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∏ –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É.
–ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞ –≤–∞—à–µ–≥–æ —á–∞—Ç–∞ –∏–ª–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.\n
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –≤–æ—Ç —Ç–∞–∫:
/set_new_greeting –ü—Ä–∏–≤–µ—Ç, $user, –º—ã —Ä–∞–¥—ã —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!\n
–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:
/set_new_greeting -""")
        await message.answer(text=text)
    else:
        await message.answer(_(non_admin_text))

@dp.message_handler(commands=['set_new_greeting'])
async def set_greet_2(message: types.Message):
    tmp = await bot.get_chat_administrators(message.chat.id)
    admins = [x.user.id for x in tmp]
    if message.from_user.id in admins:
        arguments = message.get_args()
        if arguments == '-':
            await commhandlers.database.set_new_greeting(message.chat.id, " ")
        else:
            await commhandlers.database.set_new_greeting(message.chat.id, arguments)
        await message.answer(_("–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏–∑–º–µ–Ω–µ–Ω–æ!"))
    else:
        await message.answer(_(non_admin_text))

@dp.message_handler(commands=['disable_captcha'])
async def set_captcha_1(message: types.Message):
    tmp = await bot.get_chat_administrators(message.chat.id)
    admins = [x.user.id for x in tmp]
    if message.from_user.id in admins:
        mode = await commhandlers.database.get_protect(message.chat.id)
        if mode == 'True':
            await commhandlers.database.set_new_protect(message.chat.id, "False")
            await message.answer(_("–ö–∞–ø—á–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞! üîì –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å –µ—ë –æ–±—Ä–∞—Ç–Ω–æ, –≤–≤–µ–¥–∏—Ç–µ /enable_captcha"))
        else:
            await message.answer(_("–ö–∞–ø—á–∞ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω–∞! üîì"))
    else:
        await message.answer(_(non_admin_text))
@dp.message_handler(commands=['enable_captcha'])
async def set_captcha_2(message: types.Message):
    tmp = await bot.get_chat_administrators(message.chat.id)
    admins = [x.user.id for x in tmp]
    if message.from_user.id in admins:
        mode = await commhandlers.database.get_protect(message.chat.id)
        if mode == 'False':
            await commhandlers.database.set_new_protect(message.chat.id, "True")
            await message.answer(_("–ö–∞–ø—á–∞ –≤–∫–ª—é—á–µ–Ω–∞! üîí –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤—ã–∫–ª—é—á–∏—Ç—å –µ—ë, –≤–≤–µ–¥–∏—Ç–µ /disable_captcha"))
        else:
            await message.answer(_("–ö–∞–ø—á–∞ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞! üîí"))
    else:
        await message.answer(_(non_admin_text))
@dp.message_handler(commands=['set_language'])
async def set_language(message: types.Message):
    tmp = await bot.get_chat_administrators(message.chat.id)
    admins = [x.user.id for x in tmp]
    if message.from_user.id in admins:
        languages_markup = InlineKeyboardMarkup(
            inline_keyboard=
            [
                [
                    InlineKeyboardButton(text="English üá∫üá∏", callback_data="lang_en"),
                ],
                [
                    InlineKeyboardButton(text="–£–∫—Ä–∞—ó–Ω—å—Å–∫–∞ üá∫üá¶", callback_data="lang_uk"),
                    InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data="lang_ru")
                ]
            ]
        )
        msg = await message.answer(_("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:"), reply_markup=languages_markup)
    else:
        await message.answer(_(non_admin_text))

@dp.callback_query_handler(text_contains="lang")
async def change_language(call: CallbackQuery):
    language = call.data[-2:]
    await commhandlers.database.set_new_lang(call.message.chat.id, language)
    await call.message.edit_reply_markup()
    await call.message.edit_text("‚úÖ")

